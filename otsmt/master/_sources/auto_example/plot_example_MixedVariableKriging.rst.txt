
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/plot_example_MixedVariableKriging.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_example_plot_example_MixedVariableKriging.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_plot_example_MixedVariableKriging.py:


Use of Mixed Variable Kriging
-----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 7-16

.. code-block:: default


    from smt.applications.mixed_integer import MixedIntegerContext, FLOAT, ORD, ENUM
    import numpy as np
    from smt.surrogate_models import KRG

    import otsmt
    from smt.sampling_methods import LHS, Random









.. GENERATED FROM PYTHON SOURCE LINES 17-18

| Definition of Initial data

.. GENERATED FROM PYTHON SOURCE LINES 18-42

.. code-block:: default


       
    xtypes = [ORD, FLOAT, (ENUM, 4)]
    xlimits = [[0, 5], [0.0, 4.0], ["blue", "red", "green", "yellow"]]

    def ftest(x):
        return (x[:, 0] * x[:, 0] + x[:, 1] * x[:, 1]) * (x[:, 2] + 1)

    # context to create consistent DOEs and surrogate
    mixint = MixedIntegerContext(xtypes, xlimits)

    # DOE for training
    lhs = mixint.build_sampling_method(LHS, criterion="ese")

    num = mixint.get_unfolded_dimension() * 5
    print("DOE point nb = {}".format(num))
    xt = lhs(num)
    yt = ftest(xt)

    # DOE for validation
    rand = mixint.build_sampling_method(Random)
    xv = rand(50)
    yv = ftest(xv)    
    




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    DOE point nb = 30




.. GENERATED FROM PYTHON SOURCE LINES 43-44

| Training of smt model for Mixed variables 

.. GENERATED FROM PYTHON SOURCE LINES 44-49

.. code-block:: default


    sm_mixed = mixint.build_surrogate_model(KRG())
    sm_mixed.set_training_values(xt, yt)
    sm_mixed.train()








.. GENERATED FROM PYTHON SOURCE LINES 50-51

| Creation of OpenTurns PythonFunction for prediction

.. GENERATED FROM PYTHON SOURCE LINES 51-57

.. code-block:: default


    otmixed = otsmt.smt2ot(sm_mixed)
    otmixedprediction = otmixed.getPredictionFunction()
    otmixedvariances = otmixed.getConditionalVarianceFunction()

    print('Predicted values by Mixed Integer:',otmixedprediction(xv))    
    print('Predicted variances values by Mixed Intege:',otmixedvariances(xv))  



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 50
   
       Predicting ...
       Predicting - done. Time (sec):  0.0003250
   
       Prediction time/pt. (sec) :  0.0000065
   
    Predicted values by Mixed Integer:      [ y0       ]
     0 : [ 20.8602  ]
     1 : [  7.00989 ]
     2 : [ 50.5609  ]
     3 : [ 33.2654  ]
     4 : [ 15.8775  ]
     5 : [ 13.7675  ]
     6 : [ 19.7183  ]
     7 : [ 15.9127  ]
     8 : [ 17.624   ]
     9 : [ 40.9878  ]
    10 : [  4.86421 ]
    11 : [ 82.3349  ]
    12 : [ 34.2935  ]
    13 : [  8.44305 ]
    14 : [ 35.3157  ]
    15 : [ 24.5422  ]
    16 : [ 23.429   ]
    17 : [ 12.7824  ]
    18 : [  4.73777 ]
    19 : [ 74.6887  ]
    20 : [ 63.2533  ]
    21 : [ 67.601   ]
    22 : [ 56.85    ]
    23 : [ 35.7249  ]
    24 : [ 39.4216  ]
    25 : [ 98.4032  ]
    26 : [ 15.8743  ]
    27 : [ 14.6464  ]
    28 : [ 55.4854  ]
    29 : [ 50.9183  ]
    30 : [  8.46231 ]
    31 : [ 37.149   ]
    32 : [  8.01752 ]
    33 : [ 12.0043  ]
    34 : [ 33.0264  ]
    35 : [ 60.6024  ]
    36 : [ 23.615   ]
    37 : [ 38.7595  ]
    38 : [ 74.2585  ]
    39 : [ 21.4792  ]
    40 : [ 20.9667  ]
    41 : [  2.22792 ]
    42 : [ 38.1609  ]
    43 : [ 30.8805  ]
    44 : [ 16.2361  ]
    45 : [  5.3628  ]
    46 : [ 70.2549  ]
    47 : [  4.58699 ]
    48 : [ 10.797   ]
    49 : [ 36.4167  ]
    Predicted variances values by Mixed Intege:      [ y0          ]
     0 : [ 0.0752803   ]
     1 : [ 0.56801     ]
     2 : [ 0.0867383   ]
     3 : [ 0.0154073   ]
     4 : [ 0.688266    ]
     5 : [ 0.00797237  ]
     6 : [ 0.0274233   ]
     7 : [ 0.656356    ]
     8 : [ 0.471131    ]
     9 : [ 0.0292636   ]
    10 : [ 0.963679    ]
    11 : [ 0.271614    ]
    12 : [ 0.121609    ]
    13 : [ 0.0789856   ]
    14 : [ 0.151516    ]
    15 : [ 0.0303807   ]
    16 : [ 0.00692206  ]
    17 : [ 0.0141534   ]
    18 : [ 1.04128     ]
    19 : [ 5.70853e-05 ]
    20 : [ 0.00544047  ]
    21 : [ 4.59937e-08 ]
    22 : [ 0.00123945  ]
    23 : [ 1.76061e-05 ]
    24 : [ 0.363586    ]
    25 : [ 0.000914642 ]
    26 : [ 0.123975    ]
    27 : [ 0.00175702  ]
    28 : [ 0.000567881 ]
    29 : [ 0.149774    ]
    30 : [ 0.107546    ]
    31 : [ 0.0967582   ]
    32 : [ 0.000334335 ]
    33 : [ 0.0975735   ]
    34 : [ 0.519804    ]
    35 : [ 0.00355772  ]
    36 : [ 0.0524679   ]
    37 : [ 0.0010022   ]
    38 : [ 0.0250874   ]
    39 : [ 4.05233     ]
    40 : [ 0.057669    ]
    41 : [ 1.69336     ]
    42 : [ 0.0011227   ]
    43 : [ 0.000144508 ]
    44 : [ 3.98081     ]
    45 : [ 0.000927091 ]
    46 : [ 0.475515    ]
    47 : [ 0.38883     ]
    48 : [ 0.0012699   ]
    49 : [ 0.0011476   ]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.596 seconds)


.. _sphx_glr_download_auto_example_plot_example_MixedVariableKriging.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_example_MixedVariableKriging.py <plot_example_MixedVariableKriging.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_example_MixedVariableKriging.ipynb <plot_example_MixedVariableKriging.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
