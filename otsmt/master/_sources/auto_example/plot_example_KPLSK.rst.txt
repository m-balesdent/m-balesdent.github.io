
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/plot_example_KPLSK.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_example_plot_example_KPLSK.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_plot_example_KPLSK.py:


Use of KPLSK
------------

.. GENERATED FROM PYTHON SOURCE LINES 7-15

.. code-block:: default


    from smt.sampling_methods import LHS
    from smt.problems import Sphere
    from smt.surrogate_models import KPLSK
    import numpy as np
    import otsmt









.. GENERATED FROM PYTHON SOURCE LINES 16-17

| Definition of Initial data

.. GENERATED FROM PYTHON SOURCE LINES 17-31

.. code-block:: default


       
    # Construction of the DOE
    fun = Sphere(ndim=2)
    sampling = LHS(xlimits=fun.xlimits, criterion="m")
    xt = sampling(40)
    yt = fun(xt)
    # Compute the gradient
    for i in range(2):
        yd = fun(xt, kx=i)
        yt = np.concatenate((yt, yd), axis=1)
       
    xv= sampling(10)
    







.. GENERATED FROM PYTHON SOURCE LINES 32-33

| Training of smt model for KPLSK

.. GENERATED FROM PYTHON SOURCE LINES 33-39

.. code-block:: default


    sm_kplsk = KPLSK(theta0=[1e-2])
    sm_kplsk.set_training_values(xt, yt[:,0])
    sm_kplsk.train() 






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ___________________________________________________________________________
   
                                       KPLSK
    ___________________________________________________________________________
   
     Problem size
   
          # training points.        : 40
   
    ___________________________________________________________________________
   
     Training
   
       Training ...
       Training - done. Time (sec):  0.1598809




.. GENERATED FROM PYTHON SOURCE LINES 40-41

| Creation of OpenTurns PythonFunction for prediction

.. GENERATED FROM PYTHON SOURCE LINES 41-51

.. code-block:: default


    otkplsk = otsmt.smt2ot(sm_kplsk)
    otkplskprediction = otkplsk.getPredictionFunction()
    otkplskvariances = otkplsk.getConditionalVarianceFunction()
    otkplskfirstderivatives = otkplsk.getPredictionDerivativesFunction(0)
    otkplsksecondderivatives = otkplsk.getPredictionDerivativesFunction(1)

    print('Predicted values by KPLSK:',otkplskprediction(xv))    
    print('Predicted variances values by KPLSK:',otkplskvariances(xv))    
    print('Predicted mean first derivatives by KPLSK:',otkplskfirstderivatives(xv))    
    print('Predicted mean second derivatives by KPLSK:',otkplsksecondderivatives(xv))         



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 10
   
       Predicting ...
       Predicting - done. Time (sec):  0.0002651
   
       Prediction time/pt. (sec) :  0.0000265
   
    Predicted values by KPLSK:     [ y0         ]
    0 : [  65.8777   ]
    1 : [ 151.1      ]
    2 : [ 124.127    ]
    3 : [  66.5092   ]
    4 : [  35.1523   ]
    5 : [ 144.733    ]
    6 : [  21.3779   ]
    7 : [  33.4918   ]
    8 : [  71.4442   ]
    9 : [   0.165549 ]
    Predicted variances values by KPLSK:     [ y0          ]
    0 : [ 1.40515e-07 ]
    1 : [ 1.32161e-06 ]
    2 : [ 5.89453e-07 ]
    3 : [ 6.98429e-08 ]
    4 : [ 5.83744e-08 ]
    5 : [ 5.99722e-07 ]
    6 : [ 3.78022e-08 ]
    7 : [ 7.89215e-08 ]
    8 : [ 8.87427e-08 ]
    9 : [ 5.84451e-08 ]
    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 10
   
       Predicting ...
       Predicting - done. Time (sec):  0.0002894
   
       Prediction time/pt. (sec) :  0.0000289
   
    Predicted mean first derivatives by KPLSK:     [ y0         ]
    0 : [ -11.2896   ]
    1 : [  15.5688   ]
    2 : [  17.0909   ]
    3 : [   2.1135   ]
    4 : [  11.5816   ]
    5 : [ -18.4787   ]
    6 : [  -5.41297  ]
    7 : [   6.93403  ]
    8 : [ -15.984    ]
    9 : [  -0.788469 ]
    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 10
   
       Predicting ...
       Predicting - done. Time (sec):  0.0002532
   
       Prediction time/pt. (sec) :  0.0000253
   
    Predicted mean second derivatives by KPLSK:     [ y0         ]
    0 : [  11.6645   ]
    1 : [  19.0256   ]
    2 : [ -14.2967   ]
    3 : [ -16.1732   ]
    4 : [  -2.54466  ]
    5 : [  15.4089   ]
    6 : [  -7.49742  ]
    7 : [  -9.26753  ]
    8 : [   5.50374  ]
    9 : [   0.199503 ]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.169 seconds)


.. _sphx_glr_download_auto_example_plot_example_KPLSK.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_example_KPLSK.py <plot_example_KPLSK.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_example_KPLSK.ipynb <plot_example_KPLSK.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
