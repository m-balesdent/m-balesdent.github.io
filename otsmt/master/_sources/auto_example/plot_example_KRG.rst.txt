
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/plot_example_KRG.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_example_plot_example_KRG.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_plot_example_KRG.py:


Use of Kriging
--------------

.. GENERATED FROM PYTHON SOURCE LINES 7-15

.. code-block:: default


    from smt.sampling_methods import LHS
    from smt.problems import Sphere
    from smt.surrogate_models import KRG
    import numpy as np
    import otsmt









.. GENERATED FROM PYTHON SOURCE LINES 16-17

| Definition of Initial data

.. GENERATED FROM PYTHON SOURCE LINES 17-31

.. code-block:: default


       
    # Construction of the DOE
    fun = Sphere(ndim=2)
    sampling = LHS(xlimits=fun.xlimits, criterion="m")
    xt = sampling(40)
    yt = fun(xt)
    # Compute the gradient
    for i in range(2):
        yd = fun(xt, kx=i)
        yt = np.concatenate((yt, yd), axis=1)
       
    xv= sampling(10)
    







.. GENERATED FROM PYTHON SOURCE LINES 32-33

| Training of smt model for Kriging

.. GENERATED FROM PYTHON SOURCE LINES 33-38

.. code-block:: default


    sm_krg = KRG(theta0=[1e-2])
    sm_krg.set_training_values(xt, yt[:,0])
    sm_krg.train()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ___________________________________________________________________________
   
                                      Kriging
    ___________________________________________________________________________
   
     Problem size
   
          # training points.        : 40
   
    ___________________________________________________________________________
   
     Training
   
       Training ...
       Training - done. Time (sec):  0.1120815




.. GENERATED FROM PYTHON SOURCE LINES 39-40

| Creation of OpenTurns PythonFunction for prediction

.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: default


    otkrg =  otsmt.smt2ot(sm_krg)
    otkrgprediction = otkrg.getPredictionFunction()
    otkrgvariances = otkrg.getConditionalVarianceFunction()
    otkrgfirstderivatives = otkrg.getPredictionDerivativesFunction(0)
    otkrgsecondderivatives = otkrg.getPredictionDerivativesFunction(1)

    print('Predicted values by KRG:',otkrgprediction(xv))    
    print('Predicted variances values by KRG:',otkrgvariances(xv))    
    print('Predicted mean first derivatives by KRG:',otkrgfirstderivatives(xv))    
    print('Predicted mean second derivatives by KRG:',otkrgsecondderivatives(xv))    



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 10
   
       Predicting ...
       Predicting - done. Time (sec):  0.0002887
   
       Prediction time/pt. (sec) :  0.0000289
   
    Predicted values by KRG:     [ y0        ]
    0 : [   9.18609 ]
    1 : [  39.2838  ]
    2 : [  24.3462  ]
    3 : [  19.0839  ]
    4 : [ 106.19    ]
    5 : [ 131.834   ]
    6 : [  96.156   ]
    7 : [ 117.41    ]
    8 : [  46.8977  ]
    9 : [  45.4365  ]
    Predicted variances values by KRG:     [ y0          ]
    0 : [ 3.58153e-08 ]
    1 : [ 7.1628e-08  ]
    2 : [ 4.99988e-08 ]
    3 : [ 1.75856e-07 ]
    4 : [ 1.74606e-07 ]
    5 : [ 4.31676e-07 ]
    6 : [ 8.87858e-08 ]
    7 : [ 1.0112e-06  ]
    8 : [ 4.32848e-08 ]
    9 : [ 1.26167e-07 ]
    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 10
   
       Predicting ...
       Predicting - done. Time (sec):  0.0002573
   
       Prediction time/pt. (sec) :  0.0000257
   
    Predicted mean first derivatives by KRG:     [ y0        ]
    0 : [   4.54235 ]
    1 : [  11.1987  ]
    2 : [   2.12086 ]
    3 : [  -8.61949 ]
    4 : [  12.1646  ]
    5 : [ -13.3011  ]
    6 : [ -19.5795  ]
    7 : [  18.7766  ]
    8 : [  -5.06002 ]
    9 : [  -1.10953 ]
    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 10
   
       Predicting ...
       Predicting - done. Time (sec):  0.0002568
   
       Prediction time/pt. (sec) :  0.0000257
   
    Predicted mean second derivatives by KRG:     [ y0        ]
    0 : [   4.01376 ]
    1 : [  -5.63256 ]
    2 : [  -9.63772 ]
    3 : [   1.42834 ]
    4 : [  16.6366  ]
    5 : [ -18.7184  ]
    6 : [  -1.12229 ]
    7 : [  10.8212  ]
    8 : [ -12.7275  ]
    9 : [  13.4357  ]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.121 seconds)


.. _sphx_glr_download_auto_example_plot_example_KRG.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_example_KRG.py <plot_example_KRG.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_example_KRG.ipynb <plot_example_KRG.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
