
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/example_MFKPLSK.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_example_example_MFKPLSK.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_example_MFKPLSK.py:


Use of Multi-Fidelity Kriging Partial Least Squares K
-----------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 7-13

.. code-block:: default


    from smt.applications import MFKPLSK,NestedLHS
    import numpy as np
    import otsmt



.. GENERATED FROM PYTHON SOURCE LINES 14-15

| Definition of Initial data

.. GENERATED FROM PYTHON SOURCE LINES 15-43

.. code-block:: default


       
    # Construction of the DOE
    # low fidelity model
    def lf_function(x):

        return (
            0.5 * ((x * 6 - 2) ** 2) * np.sin((x * 6 - 2) * 2)
            + (x - 0.5) * 10.0
            - 5
        )

    # high fidelity model
    def hf_function(x):

        return ((x * 6 - 2) ** 2) * np.sin((x * 6 - 2) * 2)

    # Problem set up
    xlimits = np.array([[0.0, 1.0]])
    xdoes = NestedLHS(nlevel=2, xlimits=xlimits, random_state=0)
    xt_c, xt_e = xdoes(7)

    # Evaluate the HF and LF functions
    yt_e = hf_function(xt_e)
    yt_c = lf_function(xt_c)

    xv_c, xv_e = xdoes(10)
    

.. GENERATED FROM PYTHON SOURCE LINES 44-45

| Training of smt model for MFKPLSK

.. GENERATED FROM PYTHON SOURCE LINES 45-58

.. code-block:: default


    # choice of number of PLS components
    ncomp = 1
    sm_mfkplsk = MFKPLSK(n_comp=ncomp, theta0=ncomp * [1.0])

    # low-fidelity dataset names being integers from 0 to level-1
    sm_mfkplsk.set_training_values(xt_c, yt_c, name=0)
    # high-fidelity dataset without name
    sm_mfkplsk.set_training_values(xt_e, yt_e)

    # train the model
    sm_mfkplsk.train()


.. GENERATED FROM PYTHON SOURCE LINES 59-60

| Creation of OpenTurns PythonFunction for prediction

.. GENERATED FROM PYTHON SOURCE LINES 60-68

.. code-block:: default


    otmfkplsk = otsmt.smt2ot(sm_mfkplsk)
    otmfkplskprediction = otmfkplsk.getPredictionFunction()
    otmfkplskpvariances = otmfkplsk.getConditionalVarianceFunction()
    otmfkplskfirstderivatives = otmfkplsk.getPredictionDerivativesFunction(0)

    print('Predicted values by MFKPLSK:',otmfkplskprediction(xv_e))    
    print('Predicted variances values by MFKPLSK:',otmfkplskpvariances(xv_e))    
    print('Predicted mean first derivatives by MFKPLSK:',otmfkplskfirstderivatives(xv_e)) 

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_example_example_MFKPLSK.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_MFKPLSK.py <example_MFKPLSK.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_MFKPLSK.ipynb <example_MFKPLSK.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
