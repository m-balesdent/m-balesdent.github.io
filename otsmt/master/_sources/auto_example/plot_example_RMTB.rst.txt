
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/plot_example_RMTB.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_example_plot_example_RMTB.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_plot_example_RMTB.py:


Use of Regularized minimal-energy tensor-product splines
--------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 7-16

.. code-block:: default


    from smt.sampling_methods import LHS
    from smt.problems import Sphere
    from smt.surrogate_models import RMTB
    import numpy as np
    import otsmt
    import openturns as ot









.. GENERATED FROM PYTHON SOURCE LINES 17-18

| Definition of Initial data

.. GENERATED FROM PYTHON SOURCE LINES 18-32

.. code-block:: default


       
    # Construction of the DOE
    fun = Sphere(ndim=2)
    sampling = LHS(xlimits=fun.xlimits, criterion="m")
    xt = sampling(40)
    yt = fun(xt)
    # Compute the gradient
    for i in range(2):
        yd = fun(xt, kx=i)
        yt = np.concatenate((yt, yd), axis=1)
       
    xv = ot.Sample([[0.1,1.],[1.,2.]])    
    







.. GENERATED FROM PYTHON SOURCE LINES 33-34

| Training of smt model for Regularized minimal-energy tensor-product splines

.. GENERATED FROM PYTHON SOURCE LINES 34-45

.. code-block:: default


    sm_rmtb = RMTB(
    xlimits=fun.xlimits,
    order=4,
    num_ctrl_pts=20,
    energy_weight=1e-15,
    regularization_weight=0.0,
    )
    sm_rmtb.set_training_values(xt, yt[:,0])
    sm_rmtb.train()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ___________________________________________________________________________
   
                                       RMTB
    ___________________________________________________________________________
   
     Problem size
   
          # training points.        : 40
   
    ___________________________________________________________________________
   
     Training
   
       Training ...
          Pre-computing matrices ...
             Computing dof2coeff ...
             Computing dof2coeff - done. Time (sec):  0.0000033
             Initializing Hessian ...
             Initializing Hessian - done. Time (sec):  0.0004556
             Computing energy terms ...
             Computing energy terms - done. Time (sec):  0.0068316
             Computing approximation terms ...
             Computing approximation terms - done. Time (sec):  0.0005195
          Pre-computing matrices - done. Time (sec):  0.0081813
          Solving for degrees of freedom ...
             Solving initial startup problem (n=400) ...
                Solving for output 0 ...
                   Iteration (num., iy, grad. norm, func.) :   0   0 2.590539341e+02 1.168028045e+05
                   Iteration (num., iy, grad. norm, func.) :   0   0 1.087981805e-13 6.483076437e-13
                Solving for output 0 - done. Time (sec):  0.0056787
             Solving initial startup problem (n=400) - done. Time (sec):  0.0058064
             Solving nonlinear problem (n=400) ...
                Solving for output 0 ...
                   Iteration (num., iy, grad. norm, func.) :   0   0 2.277386822e-15 6.483076437e-13
                Solving for output 0 - done. Time (sec):  0.0003719
             Solving nonlinear problem (n=400) - done. Time (sec):  0.0004776
          Solving for degrees of freedom - done. Time (sec):  0.0064671
       Training - done. Time (sec):  0.0151649




.. GENERATED FROM PYTHON SOURCE LINES 46-47

| Creation of OpenTurns PythonFunction for prediction

.. GENERATED FROM PYTHON SOURCE LINES 47-50

.. code-block:: default


    otrmtb =  otsmt.smt2ot(sm_rmtb)
    otrmtbprediction = otrmtb.getPredictionFunction()
    print('Predicted values by RMTB:',otrmtbprediction(xv))



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ___________________________________________________________________________
   
     Evaluation
   
          # eval points. : 2
   
       Predicting ...
       Predicting - done. Time (sec):  0.0003698
   
       Prediction time/pt. (sec) :  0.0001849
   
    Predicted values by RMTB:     [ y0       ]
    0 : [ 0.198493 ]
    1 : [ 0.45439  ]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.020 seconds)


.. _sphx_glr_download_auto_example_plot_example_RMTB.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_example_RMTB.py <plot_example_RMTB.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_example_RMTB.ipynb <plot_example_RMTB.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
